Namespace(alpha_init=0.0, batch_norm=False, batch_size=512, beta=5, cuda=True, data_dir='./data/SWaT_Dataset_Attack_v0.csv', graph='None', h_tol=0.0001, hidden_size=32, lambda1=0.0, log_interval=5, lr=0.002, max_iter=20, model='None', n_blocks=1, n_components=1, n_epochs=1, n_hidden=1, name='GANF_Water', output_dir='./checkpoint/model', rho_init=1.0, rho_max=1e+16, seed=18, times=4, weight_decay=0.0005)
Loading dataset  beta = 5  times = 4
Params:
            n_blocks 1, 
            input_size 1, 
            hidden_size 32, 
            n_hidden 1, 
            cond_label_size=32, 
            batch_norm=False
            
GANF(
  (rnn): LSTM(1, 32, batch_first=True)
  (gcn): GNN(
    (lin_n): Linear(in_features=32, out_features=32, bias=True)
    (lin_r): Linear(in_features=32, out_features=32, bias=False)
    (lin_2): Linear(in_features=32, out_features=32, bias=True)
  )
  (nf): MAF(
    (net): FlowSequential(
      (0): MADE(
        (net_input): MaskedLinear(in_features=1, out_features=32, bias=True, cond_features=32)
        (net): Sequential(
          (0): Tanh()
          (1): MaskedLinear(in_features=32, out_features=32, bias=True)
          (2): Tanh()
          (3): MaskedLinear(in_features=32, out_features=2, bias=True)
        )
      )
    )
  )
)
-1.6035658 -2.9451323 0.092773125 -2.9451323
Epoch: 1, train -log_prob: -1.53, test -log_prob: -2.85, roc_val: 0.6998, roc_test: 0.8820 ,h: 0.12008285522460938
[Best Threshold: {-2.5000} f1 = {0.3634}, pre = {0.6382}, rec = {0.2540}]
rho: 1.0, alpha 0.0, h 0.12008285522460938
===========================================
-1.4466071 -3.4168055 2.082559 -3.4188006
Epoch: 2, train -log_prob: -0.31, test -log_prob: -3.25, roc_val: 0.6764, roc_test: 0.8768 ,h: 0.12667465209960938
[Best Threshold: {-2.7000} f1 = {0.3706}, pre = {0.7230}, rec = {0.2492}]
rho: 1.0, alpha 0.12008285522460938, h 0.12667465209960938
===========================================
-2.2012997 -2.8252542 4.206949 -2.832377
Epoch: 3, train -log_prob: 2.32, test -log_prob: -2.79, roc_val: 0.7257, roc_test: 0.8875 ,h: 0.066009521484375
[Best Threshold: {-2.7000} f1 = {0.3358}, pre = {0.4721}, rec = {0.2605}]
rho: 10.0, alpha 0.12008285522460938, h 0.066009521484375
===========================================
-2.3124151 -2.8892446 5.0699196 -2.894583
Epoch: 4, train -log_prob: -1.60, test -log_prob: -2.85, roc_val: 0.7219, roc_test: 0.8854 ,h: 0.01259613037109375
[Best Threshold: {-2.8000} f1 = {0.3448}, pre = {0.3898}, rec = {0.3091}]
rho: 100.0, alpha 0.12008285522460938, h 0.01259613037109375
===========================================
-1.8950958 -2.8106656 4.9999065 -2.8146205
Epoch: 5, train -log_prob: -1.69, test -log_prob: -2.73, roc_val: 0.6596, roc_test: 0.8727 ,h: 0.006824493408203125
[Best Threshold: {-2.5000} f1 = {0.3651}, pre = {0.6710}, rec = {0.2508}]
rho: 100.0, alpha 1.3796958923339844, h 0.006824493408203125
===========================================
-2.6492538 -3.3312333 3.5525312 -3.33722
Epoch: 6, train -log_prob: -2.06, test -log_prob: -3.26, roc_val: 0.6759, roc_test: 0.8735 ,h: 0.002193450927734375
[Best Threshold: {-3.1000} f1 = {0.3634}, pre = {0.6596}, rec = {0.2508}]
rho: 1000.0, alpha 1.3796958923339844, h 0.002193450927734375
===========================================
-2.1940267 -3.4010665 6.45508 -3.42097
Epoch: 7, train -log_prob: -0.12, test -log_prob: -3.29, roc_val: 0.6385, roc_test: 0.8666 ,h: 0.00319671630859375
[Best Threshold: {-3.0000} f1 = {0.3203}, pre = {0.6000}, rec = {0.2184}]
rho: 1000.0, alpha 3.5731468200683594, h 0.00319671630859375
===========================================
-2.2718158 -3.3934124 7.434038 -3.4121308
Epoch: 8, train -log_prob: -0.27, test -log_prob: -3.29, roc_val: 0.6356, roc_test: 0.8667 ,h: 0.00074005126953125
[Best Threshold: {-3.1000} f1 = {0.3147}, pre = {0.3063}, rec = {0.3236}]
rho: 10000.0, alpha 3.5731468200683594, h 0.00074005126953125
===========================================
-2.3674047 -3.3988001 9.609614 -3.4223177
Epoch: 9, train -log_prob: -0.51, test -log_prob: -3.30, roc_val: 0.6303, roc_test: 0.8659 ,h: 0.000225067138671875
[Best Threshold: {-3.1000} f1 = {0.3581}, pre = {0.4530}, rec = {0.2961}]
rho: 10000.0, alpha 10.97365951538086, h 0.000225067138671875
===========================================
-2.4296112 -4.037603 10.764303 -4.054445
Epoch: 10, train -log_prob: -1.18, test -log_prob: -3.90, roc_val: 0.6170, roc_test: 0.8607 ,h: 7.62939453125e-05
[Best Threshold: {-3.6000} f1 = {0.3239}, pre = {0.3552}, rec = {0.2977}]
rho: 10000.0, alpha 13.22433090209961, h 7.62939453125e-05
===========================================
Epoch: 11, train -log_prob: 5.04, test -log_prob: -3.48, roc_val: 0.6835, roc_test: 0.8786 ,h: 2.6702880859375e-05
[Best Threshold: {-3.4000} f1 = {0.3490}, pre = {0.5158}, rec = {0.2638}]
save model 11 epoch
Epoch: 12, train -log_prob: -3.36, test -log_prob: -3.51, roc_val: 0.6558, roc_test: 0.8628 ,h: 2.288818359375e-05
[Best Threshold: {-3.4000} f1 = {0.3385}, pre = {0.4171}, rec = {0.2848}]
save model 12 epoch
Epoch: 13, train -log_prob: -3.45, test -log_prob: -3.41, roc_val: 0.6143, roc_test: 0.8555 ,h: 2.288818359375e-05
[Best Threshold: {-3.3000} f1 = {0.3080}, pre = {0.4811}, rec = {0.2265}]
Epoch: 14, train -log_prob: -3.47, test -log_prob: -3.54, roc_val: 0.6196, roc_test: 0.8563 ,h: 2.288818359375e-05
[Best Threshold: {-3.4000} f1 = {0.3101}, pre = {0.5251}, rec = {0.2201}]
save model 14 epoch
Epoch: 15, train -log_prob: -3.49, test -log_prob: -3.46, roc_val: 0.6476, roc_test: 0.8624 ,h: 1.9073486328125e-05
[Best Threshold: {-3.3000} f1 = {0.3085}, pre = {0.8027}, rec = {0.1909}]
Epoch: 16, train -log_prob: -3.50, test -log_prob: -3.57, roc_val: 0.6570, roc_test: 0.8659 ,h: 1.9073486328125e-05
[Best Threshold: {-3.4000} f1 = {0.2973}, pre = {0.9016}, rec = {0.1780}]
save model 16 epoch
Epoch: 17, train -log_prob: -3.52, test -log_prob: -3.47, roc_val: 0.6151, roc_test: 0.8529 ,h: 1.52587890625e-05
[Best Threshold: {-3.4000} f1 = {0.3232}, pre = {0.3490}, rec = {0.3010}]
Epoch: 18, train -log_prob: -3.53, test -log_prob: -3.58, roc_val: 0.6265, roc_test: 0.8546 ,h: 1.52587890625e-05
[Best Threshold: {-3.5000} f1 = {0.3098}, pre = {0.4560}, rec = {0.2346}]
save model 18 epoch
Epoch: 19, train -log_prob: -3.53, test -log_prob: -3.49, roc_val: 0.6514, roc_test: 0.8657 ,h: 1.52587890625e-05
[Best Threshold: {-3.4000} f1 = {0.3111}, pre = {0.4814}, rec = {0.2298}]
Epoch: 20, train -log_prob: -3.54, test -log_prob: -3.61, roc_val: 0.6682, roc_test: 0.8697 ,h: 1.1444091796875e-05
[Best Threshold: {-3.5000} f1 = {0.3079}, pre = {0.5407}, rec = {0.2152}]
save model 20 epoch
Epoch: 21, train -log_prob: -3.55, test -log_prob: -3.50, roc_val: 0.6258, roc_test: 0.8531 ,h: 1.1444091796875e-05
[Best Threshold: {-3.4000} f1 = {0.3075}, pre = {0.4716}, rec = {0.2282}]
Epoch: 22, train -log_prob: -3.55, test -log_prob: -3.60, roc_val: 0.6378, roc_test: 0.8559 ,h: 1.1444091796875e-05
[Best Threshold: {-3.5000} f1 = {0.3068}, pre = {0.4826}, rec = {0.2249}]
Epoch: 23, train -log_prob: -3.56, test -log_prob: -3.52, roc_val: 0.6670, roc_test: 0.8693 ,h: 1.1444091796875e-05
[Best Threshold: {-3.4000} f1 = {0.3133}, pre = {0.6132}, rec = {0.2104}]
Epoch: 24, train -log_prob: -3.56, test -log_prob: -3.63, roc_val: 0.6847, roc_test: 0.8727 ,h: 1.1444091796875e-05
[Best Threshold: {-3.5000} f1 = {0.3092}, pre = {0.6396}, rec = {0.2039}]
save model 24 epoch
Epoch: 25, train -log_prob: -3.57, test -log_prob: -3.52, roc_val: 0.6389, roc_test: 0.8544 ,h: 1.1444091796875e-05
[Best Threshold: {-3.4000} f1 = {0.3084}, pre = {0.5152}, rec = {0.2201}]
Epoch: 26, train -log_prob: -3.57, test -log_prob: -3.63, roc_val: 0.6508, roc_test: 0.8543 ,h: 1.1444091796875e-05
[Best Threshold: {-3.6000} f1 = {0.3412}, pre = {0.3691}, rec = {0.3172}]
save model 26 epoch
Epoch: 27, train -log_prob: -3.58, test -log_prob: -3.52, roc_val: 0.6776, roc_test: 0.8706 ,h: 1.1444091796875e-05
[Best Threshold: {-3.4000} f1 = {0.3096}, pre = {0.6429}, rec = {0.2039}]
Epoch: 28, train -log_prob: -3.58, test -log_prob: -3.64, roc_val: 0.6985, roc_test: 0.8768 ,h: 1.1444091796875e-05
[Best Threshold: {-3.5000} f1 = {0.3065}, pre = {0.8345}, rec = {0.1877}]
train_water.py:150: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  A = torch.tensor(init, requires_grad=True, device=device)
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
