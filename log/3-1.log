Namespace(alpha_init=0.0, batch_norm=False, batch_size=512, beta=3, cuda=True, data_dir='./data/SWaT_Dataset_Attack_v0.csv', graph='None', h_tol=0.0001, hidden_size=32, lambda1=0.0, log_interval=5, lr=0.002, max_iter=20, model='None', n_blocks=1, n_components=1, n_epochs=1, n_hidden=1, name='GANF_Water', output_dir='./checkpoint/model', rho_init=1.0, rho_max=1e+16, seed=18, times=1, weight_decay=0.0005)
Loading dataset  beta = 3  times = 1
Params:
            n_blocks 1, 
            input_size 1, 
            hidden_size 32, 
            n_hidden 1, 
            cond_label_size=32, 
            batch_norm=False
            
GANF(
  (rnn): LSTM(1, 32, batch_first=True)
  (gcn): GNN(
    (lin_n): Linear(in_features=32, out_features=32, bias=True)
    (lin_r): Linear(in_features=32, out_features=32, bias=False)
    (lin_2): Linear(in_features=32, out_features=32, bias=True)
  )
  (nf): MAF(
    (net): FlowSequential(
      (0): MADE(
        (net_input): MaskedLinear(in_features=1, out_features=32, bias=True, cond_features=32)
        (net): Sequential(
          (0): Tanh()
          (1): MaskedLinear(in_features=32, out_features=32, bias=True)
          (2): Tanh()
          (3): MaskedLinear(in_features=32, out_features=2, bias=True)
        )
      )
    )
  )
)
-1.3953191 -2.6604052 4.1259823 -2.6962829
Epoch: 1, train -log_prob: -1.35, test -log_prob: -2.58, roc_val: 0.7257, roc_test: 0.8814 ,h: 0.10027313232421875
[Best Threshold: {-2.2000} f1 = {0.4338}, pre = {0.9085}, rec = {0.2849}]
rho: 1.0, alpha 0.0, h 0.10027313232421875
===========================================
-1.3065826 -2.7588773 0.17193715 -2.7588773
Epoch: 2, train -log_prob: -0.44, test -log_prob: -2.69, roc_val: 0.7629, roc_test: 0.8891 ,h: 0.05426788330078125
[Best Threshold: {-2.5000} f1 = {0.4039}, pre = {0.5552}, rec = {0.3174}]
rho: 1.0, alpha 0.10027313232421875, h 0.05426788330078125
===========================================
-1.9279218 -3.10871 -0.68963426 -3.140394
Epoch: 3, train -log_prob: -1.80, test -log_prob: -3.02, roc_val: 0.7455, roc_test: 0.8749 ,h: 0.0313262939453125
[Best Threshold: {-2.8000} f1 = {0.3599}, pre = {0.5338}, rec = {0.2715}]
rho: 10.0, alpha 0.10027313232421875, h 0.0313262939453125
===========================================
0.48830193 -3.653595 4.0811615 -3.653595
Epoch: 4, train -log_prob: -0.55, test -log_prob: -3.51, roc_val: 0.7960, roc_test: 0.8842 ,h: 0.026031494140625
[Best Threshold: {-3.0000} f1 = {0.3778}, pre = {0.5535}, rec = {0.2868}]
rho: 10.0, alpha 0.41353607177734375, h 0.026031494140625
===========================================
-0.77717245 -3.2779078 1.5115424 -3.2779078
Epoch: 5, train -log_prob: 2.54, test -log_prob: -3.19, roc_val: 0.7343, roc_test: 0.8767 ,h: 0.01235198974609375
[Best Threshold: {-2.9000} f1 = {0.3764}, pre = {0.5474}, rec = {0.2868}]
rho: 100.0, alpha 0.41353607177734375, h 0.01235198974609375
===========================================
-1.4643162 -3.3955336 0.34760305 -3.3955336
Epoch: 6, train -log_prob: -0.68, test -log_prob: -3.33, roc_val: 0.7670, roc_test: 0.8870 ,h: 0.005401611328125
[Best Threshold: {-3.1000} f1 = {0.3953}, pre = {0.5186}, rec = {0.3193}]
rho: 100.0, alpha 1.6487350463867188, h 0.005401611328125
===========================================
-2.652571 -3.4461663 -0.40357947 -3.4672291
Epoch: 7, train -log_prob: -0.35, test -log_prob: -3.38, roc_val: 0.6926, roc_test: 0.8714 ,h: 0.00217437744140625
[Best Threshold: {-3.2000} f1 = {0.3540}, pre = {0.5018}, rec = {0.2734}]
rho: 100.0, alpha 2.1888961791992188, h 0.00217437744140625
===========================================
-1.9828097 -3.4924707 0.30712557 -3.4932919
Epoch: 8, train -log_prob: 0.16, test -log_prob: -3.42, roc_val: 0.6992, roc_test: 0.8808 ,h: 0.00287628173828125
[Best Threshold: {-3.2000} f1 = {0.4053}, pre = {0.5548}, rec = {0.3193}]
rho: 100.0, alpha 2.4063339233398438, h 0.00287628173828125
===========================================
-2.7879925 -3.5385642 -0.6315773 -3.5496325
Epoch: 9, train -log_prob: 0.18, test -log_prob: -3.48, roc_val: 0.6905, roc_test: 0.8679 ,h: 0.000919342041015625
[Best Threshold: {-3.3000} f1 = {0.3621}, pre = {0.6957}, rec = {0.2447}]
rho: 1000.0, alpha 2.4063339233398438, h 0.000919342041015625
===========================================
-2.7560618 -3.35528 -0.54190326 -3.3696175
Epoch: 10, train -log_prob: 0.23, test -log_prob: -3.26, roc_val: 0.6527, roc_test: 0.8541 ,h: 0.00235748291015625
[Best Threshold: {-3.1000} f1 = {0.3019}, pre = {0.5477}, rec = {0.2084}]
rho: 1000.0, alpha 3.3256759643554688, h 0.00235748291015625
===========================================
-2.2700682 -3.938528 2.710267 -3.938528
Epoch: 11, train -log_prob: -0.74, test -log_prob: -3.85, roc_val: 0.6888, roc_test: 0.8795 ,h: 0.0012969970703125
[Best Threshold: {-3.6000} f1 = {0.4023}, pre = {0.5181}, rec = {0.3289}]
rho: 10000.0, alpha 3.3256759643554688, h 0.0012969970703125
===========================================
-3.0054088 -3.5756238 0.4651814 -3.5819445
Epoch: 12, train -log_prob: 6.08, test -log_prob: -3.52, roc_val: 0.6904, roc_test: 0.8670 ,h: 0.000202178955078125
[Best Threshold: {-3.4000} f1 = {0.3980}, pre = {0.5761}, rec = {0.3040}]
rho: 100000.0, alpha 3.3256759643554688, h 0.000202178955078125
===========================================
-3.01715 -3.5208478 0.9910921 -3.536763
Epoch: 13, train -log_prob: 0.50, test -log_prob: -3.43, roc_val: 0.6305, roc_test: 0.8526 ,h: 0.0002899169921875
[Best Threshold: {-3.3000} f1 = {0.3128}, pre = {0.5200}, rec = {0.2237}]
rho: 100000.0, alpha 23.54357147216797, h 0.0002899169921875
===========================================
-2.7650707 -2.9933636 1.6904163 -3.0018456
Epoch: 14, train -log_prob: 0.76, test -log_prob: -2.95, roc_val: 0.6341, roc_test: 0.8478 ,h: 8.392333984375e-05
[Best Threshold: {-2.9000} f1 = {0.3048}, pre = {0.3939}, rec = {0.2486}]
rho: 1000000.0, alpha 23.54357147216797, h 8.392333984375e-05
===========================================
Epoch: 15, train -log_prob: -1.66, test -log_prob: -3.13, roc_val: 0.7463, roc_test: 0.8909 ,h: 2.288818359375e-05
[Best Threshold: {-3.0000} f1 = {0.4015}, pre = {0.5771}, rec = {0.3078}]
save model 15 epoch
Epoch: 16, train -log_prob: -2.93, test -log_prob: -3.03, roc_val: 0.7156, roc_test: 0.8839 ,h: 1.1444091796875e-05
[Best Threshold: {-2.9000} f1 = {0.4091}, pre = {0.6098}, rec = {0.3078}]
Epoch: 17, train -log_prob: -2.97, test -log_prob: -2.62, roc_val: 0.6026, roc_test: 0.8412 ,h: 0.0
[Best Threshold: {-2.6000} f1 = {0.1357}, pre = {0.0843}, rec = {0.3480}]
Epoch: 18, train -log_prob: -2.99, test -log_prob: -3.29, roc_val: 0.7516, roc_test: 0.8662 ,h: 0.0
[Best Threshold: {-3.2000} f1 = {0.3979}, pre = {0.6055}, rec = {0.2964}]
save model 18 epoch
Epoch: 19, train -log_prob: -3.01, test -log_prob: -3.08, roc_val: 0.6802, roc_test: 0.8762 ,h: 0.0
[Best Threshold: {-3.0000} f1 = {0.3921}, pre = {0.5030}, rec = {0.3212}]
Epoch: 20, train -log_prob: -3.02, test -log_prob: -2.69, roc_val: 0.6076, roc_test: 0.8429 ,h: 0.0
[Best Threshold: {-2.6000} f1 = {0.2587}, pre = {0.3701}, rec = {0.1989}]
Epoch: 21, train -log_prob: -3.04, test -log_prob: -3.34, roc_val: 0.7566, roc_test: 0.8880 ,h: 0.0
[Best Threshold: {-3.3000} f1 = {0.3858}, pre = {0.4420}, rec = {0.3423}]
save model 21 epoch
Epoch: 22, train -log_prob: -3.06, test -log_prob: -3.15, roc_val: 0.7068, roc_test: 0.8795 ,h: 0.0
[Best Threshold: {-3.1000} f1 = {0.3928}, pre = {0.4755}, rec = {0.3346}]
Epoch: 23, train -log_prob: -3.06, test -log_prob: -2.68, roc_val: 0.5973, roc_test: 0.8355 ,h: 0.0
[Best Threshold: {-2.6000} f1 = {0.2579}, pre = {0.9512}, rec = {0.1491}]
Epoch: 24, train -log_prob: -3.07, test -log_prob: -3.33, roc_val: 0.7328, roc_test: 0.8842 ,h: 0.0
[Best Threshold: {-3.2000} f1 = {0.3560}, pre = {0.7321}, rec = {0.2352}]
Epoch: 25, train -log_prob: -3.09, test -log_prob: -3.19, roc_val: 0.7212, roc_test: 0.8810 ,h: 0.0
[Best Threshold: {-3.1000} f1 = {0.4036}, pre = {0.6000}, rec = {0.3040}]
Epoch: 26, train -log_prob: -3.10, test -log_prob: -2.72, roc_val: 0.6180, roc_test: 0.8454 ,h: 0.0
[Best Threshold: {-2.6000} f1 = {0.1707}, pre = {0.9608}, rec = {0.0937}]
train_water.py:150: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  A = torch.tensor(init, requires_grad=True, device=device)
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/root/anaconda3/envs/GANF/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
